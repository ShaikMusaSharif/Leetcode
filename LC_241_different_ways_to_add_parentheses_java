class Solution {
    public List<Integer> diffWaysToCompute(String expression) {
       HashMap<String, List<Integer>> map = new HashMap<>();
       List<Integer> res = new ArrayList<>();
       if(map.containsKey(expression)){
        return map.get(expression);
       }
       for(int i=0;i<expression.length();i++){
        char ch = expression.charAt(i);
        if(ch=='+' || ch=='-' || ch=='*'){
            List<Integer> left = diffWaysToCompute(expression.substring(0,i));
            List<Integer> right = diffWaysToCompute(expression.substring(i+1));
            for(Integer l: left){
                for(Integer r : right){
                    if(ch=='+'){
                        res.add(l+r);
                    }
                    else if(ch=='-'){
                        res.add(l-r);
                    }
                    else if(ch=='*'){
                        res.add(l*r);
                    }
                }
            }
        }
       }
       if(res.isEmpty()){
            res.add(Integer.parseInt(expression));
        }
        map.put(expression,res);
        return res;
    }
}
